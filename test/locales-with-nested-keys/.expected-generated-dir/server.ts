// This file is auto-generated by generate-locale.ts

export const interpolateTemplate = (text: string, data: Record<string, string>): string => {
    let theText = text
  
    theText = theText.replace(/{{\s*(\w+)\s*}}/g, (match, key) => {
      return key in data ? data[key] : match
    })
  
    return theText
  }
export type SupportedLanguage = 'de' | 'en';
  export const defaultLanguage: SupportedLanguage = 'en';
  
const deHello = "Hallo Welt!"
const deGreeting = "Hallo {name}!"
const deHome = "Startseite"
const dePageTitle = "Seitentitel"
const dePageSectionTitle = "Sektionentitel"
const enHello = "Hello world!"
const enGreeting = "Hello {name}!"
const enHome = "Home"
const enPageTitle = "Page title"
const enPageSectionTitle = "Section title"
export const hello = (lang: SupportedLanguage) => {
      switch (lang) {
    case 'de': return deHello;
case 'en': return enHello;
        default:
            return enHello
        }
    }
export const greeting = (lang: SupportedLanguage) => {
      switch (lang) {
    case 'de': return deGreeting;
case 'en': return enGreeting;
        default:
            return enGreeting
        }
    }
export const home = (lang: SupportedLanguage) => {
      switch (lang) {
    case 'de': return deHome;
case 'en': return enHome;
        default:
            return enHome
        }
    }
export const pageTitle = (lang: SupportedLanguage) => {
      switch (lang) {
    case 'de': return dePageTitle;
case 'en': return enPageTitle;
        default:
            return enPageTitle
        }
    }
export const pageSectionTitle = (lang: SupportedLanguage) => {
      switch (lang) {
    case 'de': return dePageSectionTitle;
case 'en': return enPageSectionTitle;
        default:
            return enPageSectionTitle
        }
    }
export type StringKeys = 'hello' | 'greeting' | 'home' | 'pageTitle' | 'pageSectionTitle'